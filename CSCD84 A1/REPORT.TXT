CSC D84 - Artificial Intelligence, Unit 1 - Search

This assignment is worth:

10 AIUs (Artificial Intelligence Units)
toward the assignment component of your final
mark.

________________________________________________

Student Name(last, first): Alexia Tolentino (ME)

Student number 1: 1006293967

UTORid 1: tolent55

READ THIS AND SIGN YOUR NAME AT THE END:

 I certify that I have read the UTSC code on academic
honesty and plaguarism. All work submitted as part
of this assignment is my own.

	Signed: Alexia Tolentino


(-5 marks for failing to provide the identifying
 information requested above)
________________________________________________

Answer the following questions. Be concise and clear
but explain carefully when needed.

1 .- (1 marks) Of BFS and DFS, which search algorithm yields the best results? (i.e. which is more likely
     to get the mouse to the cheese safely before being eaten?)
	BFS yields the best results.


2 .- (1 marks) Does this mean that in general BFS is a better search algorithm? (yes/no and give reasons to
     support your answer based on your observations)
	Yes, for this situation BFS is a better choice as it tends to create a shorter path thus the mouse has 
	less of a chance to get close to running into a cat. Also with DFS since it chooses depth-first it 
	tends to create long paths and can often get stuck thus resulting in cycling.**


3 .- (2 marks) Describe the heuristic function you used for A* search. Why is this heuristic admissible?
	H_cost(): H_cost uses the manhattan distance to calculate the cost. Thus the manhattan distance is 
	admissible because it never overestimates the cost of reaching the target; it always encourages the
	node that is closer to the target without adding extra weight. 


4 .- (1 marks) Explain how your heuristic function accounts for the presence of multiple cheeses.
	H_cost(): It accounts for the presence of multiple cheeses by comparing the distances of the local 
	cheeses to the mouse making the one with the lowest distance have the lowest cost. The distance 
	between the neighbor+cheese is compared to the mouse+cheese. If the distance between the neighbor+
	cheese is less than the mouse+cheese then it implies that moving to this neighbour brings the mouse
	closer to the cheese; and we use the smaller distance as the cost.



5 .- (1 marks) Is A* equivalent to BFS for this problem? or is it better/worse? explain your answer based on 
     your observations.
	Since BFS searches for the next cheese in the array rather than the next closest cheese, it would 
	take a bit longer than A* on average for cases of more cheeses. 
	But since H_cost() doesn't account for distance from kittens, it may also fail to dodge them when on 
	their way to a cheese whilst BFS checks whether a step along the path will run into a kitten or not. 

	BFS will often guarantee the mouse gets to the cheese without getting caught but A* would do it 
	faster with a higher chance of getting caught.

	Therefore, they're about equivalent.

6 .- (2 marks) Describe your heuristic function for A*-nokitty. How does it work? what factors are considered
     into the cost function? is it admissible (yes/no and why)?
	H_cost_nokitty(): This heuristic function takes into account where the cats are in relation to the mouse.
	If any cat is within a 5 space radius this is considered the "Danger Zone". When moving to the neibouring 
	node has a smaller distance to the cat then we have to increase the cost. Thus resulting in the mouse 
	moving away from the cats as much as it can.
	

7 .- (2 marks) What is the largest limitation of the search algorithms implemented in this assignment?
     (i.e. is there anything we are missing that could lead to a smarter mouse?) - this is
     a more or less open question, but we talked about it in lecture!
	A smarter mouse could detect when the kittens are stopped and can't move this being able to play a bit
	riskier in those moments. Also a smarter mouse would know when a kitten would be blocked; as of right 
	now my mouse is concerned about being close to a cat and therefore even though the pathway for the cat 
	to get to the mouse may be blocked, it still views the cat as a threat.
	

_____________________________________________________

Mark with an 'x' where appropriate. If something is only working partially, briefly describe what works, what
doesn't work, or what problems exist.
	
		Complete/Working	Partial		Not done

DFS			x			

BFS			x

A*			x

H			x

H_no_cats		x

_____________________________________________________

Marking:

(5 marks) Correctly implementing BFS - the search
          runs and produces the expected search
          behaviour.

(5 marks) Correctly implementing DFS - the search
          runs and produces the expected behaviour.

(5 marks)  A* heuristic function is implemented, reasonable,
           and admissible.

(10 marks) Correctly implementing A* search - the search
           runs and produces the expected behaviour.

(10 marks) Implemented a **clever**  A*-nokitty heuristic
           and a working A*-nokitty search. The search
           should produce a smarter mouse than all of
           BFS/DFS/A*.

           The heuristic should accounts for known game 
           factors that affect the mouse's chance of success.

           (to be marked competitively - smartest mouse
            in the class earns full marks)

(10 marks) Answers in this report file

(up to 15 marks) Assigned by the TA based on how smart your
		 mouse actually is. Mind what is going on in
		 the game, and think about how to make your
		 mouse most likely to win!

Total for A1:       / out of 60


